// <auto-generated />
using System;
using EmployeeProj.Server.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeProj.Server.Migrations
{
    [DbContext(typeof(employee))]
    [Migration("20240917165731_tryfix1")]
    partial class tryfix1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeProj.Server.Models.Details", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte[]>("AttachedDoc")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("AttachedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CoverImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WaitingForSupervisor")
                        .HasColumnType("bit");

                    b.Property<int>("WriterID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WriterID");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.EmployeeEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.Evaluation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Item1")
                        .HasColumnType("float");

                    b.Property<double>("Item2")
                        .HasColumnType("float");

                    b.Property<double>("Item3")
                        .HasColumnType("float");

                    b.Property<double>("Item4")
                        .HasColumnType("float");

                    b.Property<double>("Item5")
                        .HasColumnType("float");

                    b.Property<double>("Item6")
                        .HasColumnType("float");

                    b.Property<double>("Item7")
                        .HasColumnType("float");

                    b.Property<int>("ManagerID")
                        .HasColumnType("int");

                    b.Property<int>("ManagerRequestsID")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceDetails")
                        .HasColumnType("int");

                    b.Property<int>("StateType")
                        .HasColumnType("int");

                    b.Property<int>("WriterID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ManagerRequestsID");

                    b.HasIndex("WriterID");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.ManagerRequest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ManagerRequests");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.ProgramEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DetailsParent")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeEntityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Step")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DetailsParent");

                    b.HasIndex("EmployeeEntityID");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.SupervisorRequest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DetailID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeEntityID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DetailID");

                    b.HasIndex("EmployeeEntityID");

                    b.ToTable("SupervisorRequests");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.Details", b =>
                {
                    b.HasOne("EmployeeProj.Server.Models.EmployeeEntity", "Writer")
                        .WithMany("DetailsGroup")
                        .HasForeignKey("WriterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.Evaluation", b =>
                {
                    b.HasOne("EmployeeProj.Server.Models.ManagerRequest", "ManagerRequests")
                        .WithMany("Evaluations")
                        .HasForeignKey("ManagerRequestsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeProj.Server.Models.EmployeeEntity", "Writer")
                        .WithMany("Evaluations")
                        .HasForeignKey("WriterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagerRequests");

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.ProgramEntity", b =>
                {
                    b.HasOne("EmployeeProj.Server.Models.Details", "Parent")
                        .WithMany("LinkedPrograms")
                        .HasForeignKey("DetailsParent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeProj.Server.Models.EmployeeEntity", null)
                        .WithMany("Programs")
                        .HasForeignKey("EmployeeEntityID");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.SupervisorRequest", b =>
                {
                    b.HasOne("EmployeeProj.Server.Models.Details", "OneDetail")
                        .WithMany("SupervisorRequests")
                        .HasForeignKey("DetailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeProj.Server.Models.EmployeeEntity", null)
                        .WithMany("SupervisorNotify")
                        .HasForeignKey("EmployeeEntityID");

                    b.Navigation("OneDetail");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.Details", b =>
                {
                    b.Navigation("LinkedPrograms");

                    b.Navigation("SupervisorRequests");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.EmployeeEntity", b =>
                {
                    b.Navigation("DetailsGroup");

                    b.Navigation("Evaluations");

                    b.Navigation("Programs");

                    b.Navigation("SupervisorNotify");
                });

            modelBuilder.Entity("EmployeeProj.Server.Models.ManagerRequest", b =>
                {
                    b.Navigation("Evaluations");
                });
#pragma warning restore 612, 618
        }
    }
}
